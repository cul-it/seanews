<?php
// $Id$

/**
 * @file
 * Southeast Asia Newspaper Archive Tools
 */

/**
 * computed fields handlers
 *  see https://www.drupal.org/node/126522
 *
 * Parameters:
 *
 * &$entity_field - The computed field. Used to store the computed value.
 * $entity_type - The entity type: node, user, comment, etc.
 * $entity - The actual entity (a node, user, comment, etc.)
 * $field - General field settings.
 * $instance - Field instance settings.
 * $items - The list of items.
 *
 * field_pub_title_native_translit - transliterate field_pub_title_native
 * field_pub_title_r_cul_path - make filename/url path from field_pub_title_r_cul
 * field_pub_issue_pub_path - lookup publication pathname
 *     via entity reference field_pub_issue_pub
 */

function computed_field_field_pub_title_native_translit_compute(&$entity_field, $entity_type, $entity, $field, $instance, $langcode, $items) {
  $field_items = field_get_items($entity_type, $entity, 'field_pub_title_native');
  $x = array_pop($field_items);
  $native = array_pop($x);
  if (function_exists('transliteration_get')) {
    // replace untranslatable characters with underscore
    $native = transliteration_get($native, '_', language_default('language'));
    }
  $entity_field[0]['value'] = t($native);
}

function computed_field_field_pub_title_r_cul_path_compute(&$entity_field, $entity_type, $entity, $field, $instance, $langcode, $items) {
  $field_items = field_get_items($entity_type, $entity, 'field_pub_title_r_cul');
  $x = array_pop($field_items);
  $newspaper = array_pop($x);
  if (function_exists('transliteration_get')) {
    $newspaper = transliteration_get($newspaper, '-', language_default('language'));
    }
  // replace blanks in path name with -
  $newspaper = strtolower(str_replace(' ', '-', $newspaper));
  $entity_field[0]['value'] = t($newspaper);
}

function computed_field_field_pub_issue_pub_path_compute(&$entity_field, $entity_type, $entity, $field, $instance, $langcode, $items) {
  $field_items = field_get_items($entity_type, $entity, 'field_pub_issue_pub');
  $x = array_pop($field_items);
  $pub_nid = array_pop($x);
  $pub = node_load($pub_nid);
  $wrapper = entity_metadata_wrapper('node', $pub);
  $path = $wrapper->field_pub_title_r_cul_path->value();
  $entity_field[0]['value'] = t($path);
}

function computed_field_field_title_r_cul_translit_compute(&$entity_field, $entity_type, $entity, $field, $instance, $langcode, $items) {
  $field_items = field_get_items($entity_type, $entity, 'field_title_r_cul');
  $x = array_pop($field_items);
  $newspaper = array_pop($x);
  if (function_exists('transliteration_get')) {
    $newspaper = transliteration_get($newspaper, '-', language_default('language'));
    }
  $newspaper = strtolower(str_replace(' ', '-', $newspaper));
  $entity_field[0]['value'] = t($newspaper);
}

// function computed_field_field_title_r_cul_translit_display($field, $entity_field_item, $entity_lang, $langcode, $entity) {
//   dsm(array('entity_field_item value', $entity_field_item));
//   return $entity_field_item['value'];
// }

function computed_field_field_expected_issue_lookup_compute(&$entity_field, $entity_type, $entity, $field, $instance, $langcode, $items) {
  $found_nid = 0;

  // find the date of the expected_issue
  $field_items = field_get_items($entity_type, $entity, 'field_pub_expected_issue_date');
  $no_lang = array_pop($field_items);
  $expected_date = $no_lang['value'];

  // find the publication of the expected_issue
  $field_items = field_get_items($entity_type, $entity, 'field_publication_ent_reference');
  $no_lang = array_pop($field_items);
  $expected_publication= array_pop($no_lang);

  $query = new EntityFieldQuery();

  $query->entityCondition('entity_type', 'node')
    ->entityCondition('bundle', 'publication_issue')
    ->propertyCondition('status', NODE_PUBLISHED)
    ->fieldCondition('field_pub_issue_date', 'value', $expected_date, '=')
    ->fieldCondition('field_pub_issue_pub', 'target_id', $expected_publication, '=')
    ->fieldCondition('field_pub_issue_document', 'fid', 'NULL', '!=')
    ->range(0, 10)
    ->addMetaData('account', user_load(1)); // Run the query as user 1.

  $result = $query->execute();

  if (isset($result['node'])) {
    $publication_nids = array_keys($result['node']);
    $found_nid = array_pop($publication_nids);
  }

  $entity_field[0]['value'] = $found_nid;
}

function seanews_get_publication_path($entity_id) {
  $wrapper = entity_metadata_wrapper('node', $entity_id);
  return $wrapper->field_pub_title_r_cul_path->value();
}

function seanews_get_publication_title($entity_id) {
  $wrapper = entity_metadata_wrapper('node', $entity_id);
  return $wrapper->title->value();
}

/**
 * Implements hook_node_presave
 * @param  object $node objects passed by reference in php5
 * @return object       $node can be modified
 *
 * move uploaded issue files into
 * private://issues/<newspaper>/<year>/original_file_name.pdf
 */
function seanews_node_presave($node) {
  if ($node->type == "publication_issue") {
    try {
      $wrapper = entity_metadata_wrapper('node', $node);
      $issue_datetime = $wrapper->field_pub_issue_date->value();
      $issue_year = format_date($issue_datetime, 'custom', 'Y');
      $pub_title = $wrapper->field_pub_issue_pub->title->value();
      dsm(array('title is' => $pub_title));
      return;

      $publication_nid = $wrapper->field_pub_issue_pub->nid->value();
      dsm(array('publication' => $publication_nid));
      $issue_path = seanews_get_publication_path($publication_nid);
      $file_info = $wrapper->field_pub_issue_document->value();
      $nid = $wrapper->nid->value();
      if (empty($nid)) {
        // saving issue for the first time
        dsm("No nid!");

        // set the title
        $issue_date = format_date($issue_datetime, 'custom', 'Y-m-d');
        //$title = seanews_get_publication_title($publication_nid);
        $title = $wrapper->field_pub_issue_pub->title->value();
        $wrapper->title->set(t('@publication @year', array('@publication' => $title, '@year' => $issue_date)));

      }
      $fid = $file_info['fid'];
      $file = $wrapper->field_pub_issue_document->file->value();
      dsm($nid);
      dsm($file);
      dsm($wrapper->getPropertyInfo());
      dsm($file_info);
      $original_name = $file_info['filename'];

      dsm(array('date' => $issue_year, 'path' => $issue_path, 'fid' => $fid, 'original name' => $original_name, 'node' => $node));

       $file_object = file_load($fid);
       $destination = 'private://issues/' . $issue_path . '/' . $issue_year . '/';
       if(file_prepare_directory($destination, FILE_CREATE_DIRECTORY)) {
         $file = file_copy($file_object, $destination .  $original_name, FILE_EXISTS_RENAME);
         dsm($file);
       }
       if ($file) {
         $file->status = FILE_STATUS_PERMANENT;
         drupal_chmod($file->uri, 0775);
         $file = file_save($file);
         $wrapper->field_pub_issue_document->file->set($file);
      }
    }
    catch (EntityMetadataWrapperException $exc) {
        watchdog(
          'seanews',
          'See '  . __FUNCTION__ . '() <pre>' .  $exc->getTraceAsString() . '</pre>',
           NULL, WATCHDOG_ERROR
        );
    }
  }
}
